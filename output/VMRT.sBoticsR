#region actions
	numero angulo = 0
	booleano verCurva = falso
	numero contador = 0
	
	numero triangulo = 0
	
	tarefa curvaEsquerda{
	    escrever(1, "Curva pra Esquerda")
	    frente(100)
	    esperar(150)
	    esquerda(1000)
	    esperar(600)
	
	    zerartemporizador()
	    enquanto (cor(3) != "PRETO" e temporizador() < 2420) farei {
	        esquerda(1000)
	    }
	    tras(100)
	    esperar(200)
	    limparconsole()
	}
	
	tarefa curvaDireita{
	    escrever(1, "Curva pra Direita")
	    frente(100)
	    esperar(150)
	    direita(1000)
	    esperar(600)
	
	    zerartemporizador()
	    enquanto (cor(3) != "PRETO" e temporizador() < 2420) farei {
	        direita(1000)
	    }
	    tras(100)
	    esperar(200)
	    limparconsole()
	}
	
	tarefa seguirLinha{
	    se(cor(1) == "PRETO" ou cor(2) == "PRETO")entao{
	        escrever(1, "um tequinho pra direita")
	        direita(1000)
	    }
	    se(cor(4) == "PRETO" ou cor(5) == "PRETO")entao{
	        escrever(1, "um tequinho pra esquerda")
	        esquerda(1000)
	    }
	    se(cor(1) == "BRANCO" e cor(2) == "BRANCO" e cor(4) == "BRANCO" e cor(5) == "BRANCO")entao{
	        escrever(1, "continue a nadar, continue a nadar...")
	        frente(100)
	    }
	}
	
	tarefa verificaCurva{
	    frente(100)
	    esperar(500)
	    se(luz(2) > 50 e luz(3) > 50 e luz(4) > 50)entao{
	        verCurva = verdadeiro
	    }
	    senao{
	        verCurva = falso
	    }
	}
	
	tarefa ajuste{
	    se((direcao() > 0 ou direcao() < 360) e direcao() <= 45)entao{
	        angulo = direcao()
	        rotacionar(300, negativo(angulo))
	    }
	    senao se(direcao() > 45 e direcao() <= 90)entao{
	        angulo = 90 - direcao()
	        rotacionar(300, angulo)
	    }
	    senao se(direcao() > 90 e direcao() <= 135)entao{
	        angulo = 90 - direcao()
	        rotacionar(300, angulo)
	    }
	    senao se(direcao() > 135 e direcao() <= 180)entao{
	        angulo = 180 - direcao()
	        rotacionar(300, angulo)
	    }
	    senao se(direcao() > 180 e direcao() <= 225)entao{
	        angulo = 180 - direcao()
	        rotacionar(300, angulo)
	    }
	    senao se(direcao() > 225 e direcao() <= 270)entao{
	        angulo = 270 - direcao()
	        rotacionar(300, angulo)
	    }
	    senao se(direcao() > 270 e direcao() <= 315) entao{
	        angulo = 270 - direcao()
	        rotacionar(300, angulo)
	    }
	    senao se(direcao() > 315 e direcao() <= 360)entao{
	        angulo = 360 - direcao()
	        rotacionar(300, angulo)
	    }
	}
#endregion

#region arena
	inicio
	velocidadeatuador(150)
	levantar(600)
	
	    enquanto ((ultra(2) > 20) e (inclinacao()<320 ou inclinacao()>342)) farei {
	        escrever(3, "piso")
	        
	        se(ultra(3)<20) entao{
	            se(ultra(1)>30 e ultra(1)<70)entao{
	                frenterotacao(150, 15)
	                se(ultra(2)<30)entao{
	                    interromper()
	                }
	                senao{
	                    trasrotacao(150, 15)                
	                }
	            }
	            escrever(1, "ObstÃ¡culo")
	            ajuste()
	            direita(1000)
	            esperar(1840)
	            frente(300)
	            esperar(600)
	            esquerda(1000)
	            esperar(1840)
	            frente(300)
	            esperar(600)
	            esquerda(1000)
	            esperar(1840)
	            enquanto (cor(2) != "PRETO" e cor(3) != "PRETO" e cor(4) != "PRETO") farei {
	                frente(200)
	            }
	            frente(300)
	            esperar(250)
	            curvaDireita()
	            ajuste()
	            enquanto (!toque(1)) farei {
	              tras(250)
	            }
	        }
	
	        se(cor(1) == "PRETO" e cor(2) == "PRETO" e cor(4) == "PRETO" e cor(5) == "PRETO")entao{
	            escrever(1, "Encruzilhada")
	            frente(150)
	            esperar(400)
	        }
	
	        
	        se (cor(2) == "VERDE" e cor(4) == "VERDE") entao {
	            escrever(2, "beco")
	            frente(150)
	            esperar(400)
	            curvaEsquerda()
	            curvaEsquerda()
	        }
	
	        se (cor(1) == "VERDE" ou cor(2) == "VERDE") entao {
	            escrever(2, "VERDE")
	            frente(150)
	            esperar(750)
	            curvaDireita()
	        }
	
	        se (cor(4) == "VERDE" ou cor(5) == "VERDE") entao {
	            escrever(2, "VERDE")
	            frente(150)
	            esperar(750)
	            curvaEsquerda()
	        }
	        se (cor(1) == "PRETO" e cor(2) == "PRETO") entao {
	            escrever(2, "PRETO")
	            verificaCurva()
	            se (verCurva) entao {
	                curvaDireita()
	            }
	        }
	
	        se (cor(4) == "PRETO" e cor(5) == "PRETO") entao {
	            escrever(2, "PRETO")
	            verificaCurva()
	            se (verCurva) entao {
	                curvaEsquerda()
	            }
	        }
	
	        seguirLinha()
	
	    }

#endregion

#region rampa
	    limparconsole()
	    escrever(3, "subindo rampa")
	    baixar(450)
	
	    enquanto (ultra(2)>20) farei {
	        seguirLinha()
	    }
	    baixar(150)
	    enquanto (ultra(2)<20) farei {
	        seguirLinha()
	    }
	    parar()
	    limparconsole()
#endregion

#region resgate
	escrever(3, "resgate")
	
	frente(300)
	esperar(500)
	
	direita(1000)
	esperar(1710)
	
	frenterotacao(170, 60)
	
	frenterotacao(170, 50)
	
	se(temvitima())entao{
	    velocidadeatuador(50)
	    levantar(600)
	    girarcima(1000)
	    frenterotacao(170, 15)
	}
	
	se (cor(6) == "PRETO") entao {
	
	    triangulo = direcao()
	    
	    se(temvitima())entao{
	        repita 3 vezes {
	                frente(300)
	                esperar(100)
	                tras(300)
	                esperar(100)
	        }
	    }
	}
	
	trasrotacao(170, 45)
	
	se(anguloatuador() > 15)entao{
	    baixar(600)
	}
	se(angulogiroatuador() != 0)entao{
	    girarbaixo(1000)
	}
	
	
	direita(1000)
	esperar(3420)
	
	frenterotacao(170, 50)
	
	se(temvitima())entao{
	    velocidadeatuador(50)
	    levantar(600)
	    girarcima(1000)
	    frenterotacao(170, 15)
	}
	
	se (cor(6) == "PRETO") entao {
	
	    triangulo = direcao()
	    
	    se(temvitima())entao{
	        repita 3 vezes {
	                frente(300)
	                esperar(100)
	                tras(300)
	                esperar(100)
	        }
	    }
	}
	
	trasrotacao(170, 45)
	
	se(anguloatuador() > 15)entao{
	    baixar(600)
	}
	se(angulogiroatuador() != 0)entao{
	    girarbaixo(1000)
	}
	
	direita(1000)
	esperar(6840)
	
	frenterotacao(170, 50)
	
	se(temvitima())entao{
	    velocidadeatuador(50)
	    levantar(600)
	    girarcima(1000)
	    frenterotacao(170, 15)
	}
	
	se (cor(6) == "PRETO") entao {
	
	    triangulo = direcao()
	    
	    se(temvitima())entao{
	        repita 3 vezes {
	                frente(300)
	                esperar(100)
	                tras(300)
	                esperar(100)
	        }
	    }
	}
	
	trasrotacao(170, 45)
	
	se(anguloatuador() > 15)entao{
	    baixar(600)
	}
	se(angulogiroatuador() != 0)entao{
	    girarbaixo(1000)
	}
	
	direita(1000)
	esperar(3420)
#endregion

fim
