numero angulo = 0
booleano verCurva = falso
numero contador = 0

tarefa curvaEsquerda{
    escrever(1, "Curva pra Esquerda no preto")
    frente(100)
    esperar(150)
    esquerda(1000)
    esperar(500)

    zerartemporizador()
    enquanto (cor(3) != "PRETO" e temporizador() <= 2435) farei {
        esquerda(1000)
    }
    tras(100)
    esperar(250)
    limparconsole()
}

tarefa curvaDireita{
    escrever(1, "Curva pra Direita no preto")
    frente(100)
    esperar(150)
    direita(1000)
    esperar(500)

    zerartemporizador()
    enquanto (cor(3) != "PRETO" e temporizador() <= 2435) farei {
        direita(1000)
    }
    tras(100)
    esperar(250)
    limparconsole()
}

tarefa curvaEsquerdaVerde {
    escrever(1, "Curva pra Esquerda no verde")
    frente(100)
    esperar(150)
    esquerda(1000)
    esperar(1000)

    zerartemporizador()
    enquanto (cor(3) != "PRETO" e temporizador() <= 2435) farei {
        esquerda(1000)
    }
    tras(100)
    esperar(350)
    limparconsole()
}

tarefa curvaDireitaVerde {
    escrever(1, "Curva pra Direita no verde")
    frente(100)
    esperar(150)
    direita(1000)
    esperar(1000)

    zerartemporizador()
    enquanto (cor(3) != "PRETO" e temporizador() <= 2435) farei {
        direita(1000)
    }
    tras(100)
    esperar(350)
    limparconsole()
}

tarefa seguirLinha{

    se(cor(1) == "PRETO" ou cor(2) == "PRETO")entao{
        escrever(1, "um tequinho pra direita")
        direita(1000)
    }

    se(cor(4) == "PRETO" ou cor(5) == "PRETO")entao{
        escrever(1, "um tequinho pra esquerda")
        esquerda(1000)
    }

    se(cor(1) == "BRANCO" e cor(2) == "BRANCO" e cor(4) == "BRANCO" e cor(5) == "BRANCO")entao{
        escrever(1, "continue a nadar, continue a nadar...")
        frente(115)
    }
}

tarefa verificaCurva{
    escrever(1, "Verificando se hÃ¡ curva")
    frente(100)
    esperar(500)
    se(luz(2) > 50 e luz(3) > 50 e luz(4) > 50)entao{
        verCurva = verdadeiro
    }
    senao{
        verCurva = falso
    }
}

tarefa ajuste{

    se((direcao() > 0 ou direcao() < 360) e direcao() <= 45)entao{
        angulo = direcao()
        rotacionar(500, negativo(angulo))
    }

    senao se(direcao() > 45 e direcao() <= 90)entao{
        angulo = 90 - direcao()
        rotacionar(500, angulo)
    }

    senao se(direcao() > 90 e direcao() <= 135)entao{
        angulo = 90 - direcao()
        rotacionar(500, angulo)
    }

    senao se(direcao() > 135 e direcao() <= 180)entao{
        angulo = 180 - direcao()
        rotacionar(500, angulo)
    }

    senao se(direcao() > 180 e direcao() <= 225)entao{
        angulo = 180 - direcao()
        rotacionar(500, angulo)
    }

    senao se(direcao() > 225 e direcao() <= 270)entao{
        angulo = 270 - direcao()
        rotacionar(500, angulo)
    }

    senao se(direcao() > 270 e direcao() <= 315) entao{
        angulo = 270 - direcao()
        rotacionar(500, angulo)
    }

    senao se(direcao() > 315 e direcao() <= 360)entao{
        angulo = 360 - direcao()
        rotacionar(500, angulo)
    }
}